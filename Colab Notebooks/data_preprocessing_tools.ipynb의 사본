{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1-oRijAoUwpp2Qlz-Kl3k6hNlodWQyf87","timestamp":1669822364430}]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"37puETfgRzzg"},"source":["# Data Preprocessing Tools"]},{"cell_type":"markdown","metadata":{"id":"EoRP98MpR-qj"},"source":["## Importing the libraries"]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd"],"metadata":{"id":"Dd9YOROrMsu4","executionInfo":{"status":"ok","timestamp":1669889915474,"user_tz":-540,"elapsed":362,"user":{"displayName":"최동영","userId":"18154264124028117632"}}},"execution_count":3,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RopL7tUZSQkT"},"source":["## Importing the dataset"]},{"cell_type":"code","source":["dataset = pd.read_csv('Data.csv')\n","X = dataset.iloc[:,:-1].values\n","Y = dataset.iloc[:,-1].values"],"metadata":{"id":"gqRHVK6yOfFE","executionInfo":{"status":"ok","timestamp":1669889917173,"user_tz":-540,"elapsed":2,"user":{"displayName":"최동영","userId":"18154264124028117632"}}},"execution_count":4,"outputs":[]},{"cell_type":"code","source":["print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zk7Z2UqwbK7V","executionInfo":{"status":"ok","timestamp":1669889921232,"user_tz":-540,"elapsed":669,"user":{"displayName":"최동영","userId":"18154264124028117632"}},"outputId":"03993c32-30ab-4442-9890-08afc0522039"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["[['France' 44.0 72000.0]\n"," ['Spain' 27.0 48000.0]\n"," ['Germany' 30.0 54000.0]\n"," ['Spain' 38.0 61000.0]\n"," ['Germany' 40.0 nan]\n"," ['France' 35.0 58000.0]\n"," ['Spain' nan 52000.0]\n"," ['France' 48.0 79000.0]\n"," ['Germany' 50.0 83000.0]\n"," ['France' 37.0 67000.0]]\n"]}]},{"cell_type":"code","source":["print(Y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hhKABoY9bjY9","executionInfo":{"status":"ok","timestamp":1669889931008,"user_tz":-540,"elapsed":641,"user":{"displayName":"최동영","userId":"18154264124028117632"}},"outputId":"62cef25c-e4f5-4462-c65b-50dcdd2e3a36"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["['No' 'Yes' 'No' 'No' 'Yes' 'Yes' 'No' 'Yes' 'No' 'Yes']\n"]}]},{"cell_type":"markdown","metadata":{"id":"nhfKXNxlSabC"},"source":["## Taking care of missing data"]},{"cell_type":"code","source":["from sklearn.impute import SimpleImputer\n","imputer = SimpleImputer(missing_values=np.nan, strategy='mean')\n","imputer.fit(X[:,1:3])\n","X[:,1:3] = imputer.transform(X[:,1:3])"],"metadata":{"id":"vTGtsx-ogHB8","executionInfo":{"status":"ok","timestamp":1669889935017,"user_tz":-540,"elapsed":1499,"user":{"displayName":"최동영","userId":"18154264124028117632"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["print(X)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9CL_9xHQj0Lj","executionInfo":{"status":"ok","timestamp":1669862482458,"user_tz":-540,"elapsed":304,"user":{"displayName":"최동영","userId":"18154264124028117632"}},"outputId":"3eff66c2-5ec9-491b-c192-1cdcd4b1b5c6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[['France' 44.0 72000.0]\n"," ['Spain' 27.0 48000.0]\n"," ['Germany' 30.0 54000.0]\n"," ['Spain' 38.0 61000.0]\n"," ['Germany' 40.0 63777.77777777778]\n"," ['France' 35.0 58000.0]\n"," ['Spain' 38.77777777777778 52000.0]\n"," ['France' 48.0 79000.0]\n"," ['Germany' 50.0 83000.0]\n"," ['France' 37.0 67000.0]]\n"]}]},{"cell_type":"markdown","metadata":{"id":"CriG6VzVSjcK"},"source":["## Encoding categorical data"]},{"cell_type":"markdown","metadata":{"id":"AhSpdQWeSsFh"},"source":["### Encoding the Independent Variable"]},{"cell_type":"code","source":["from sklearn.compose import ColumnTransformer\n","from sklearn.preprocessing import OneHotEncoder\n","ct = ColumnTransformer(transformers=[('encoder', OneHotEncoder(), [0])], remainder='passthrough')\n","X = np.array(ct.fit_transform(X))"],"metadata":{"id":"RFRwonV6J-0E","executionInfo":{"status":"ok","timestamp":1669890374942,"user_tz":-540,"elapsed":594,"user":{"displayName":"최동영","userId":"18154264124028117632"}}},"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"DXh8oVSITIc6"},"source":["### Encoding the Dependent Variable"]},{"cell_type":"code","source":["from sklearn.preprocessing import LabelEncoder\n","le = LabelEncoder()\n","Y = le.transform(Y)"],"metadata":{"id":"ijjfc2oqOiiL"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"qb_vcgm3qZKW"},"source":["## Splitting the dataset into the Training set and Test set"]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_tran, X_test, Y_train, Y_test = train_test_split(X, Y, test_size = 0.2, random_state=1)"],"metadata":{"id":"1qqumjqxTmYJ"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"TpGqbS4TqkIR"},"source":["## Feature Scaling"]},{"cell_type":"code","source":["from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_tran[:,3:] = sc.fit_transform(X_tran[:,3:])\n","X_test[:,3:] = sc.transform(X_test[:,3:])"],"metadata":{"id":"wtDObr5jZ-dO"},"execution_count":null,"outputs":[]}]}